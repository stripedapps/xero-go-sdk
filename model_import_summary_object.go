/*
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40.0
Contact: api@xero.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ImportSummaryObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportSummaryObject{}

// ImportSummaryObject struct for ImportSummaryObject
type ImportSummaryObject struct {
	ImportSummary *ImportSummary `json:"ImportSummary,omitempty"`
}

// NewImportSummaryObject instantiates a new ImportSummaryObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportSummaryObject() *ImportSummaryObject {
	this := ImportSummaryObject{}
	return &this
}

// NewImportSummaryObjectWithDefaults instantiates a new ImportSummaryObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportSummaryObjectWithDefaults() *ImportSummaryObject {
	this := ImportSummaryObject{}
	return &this
}

// GetImportSummary returns the ImportSummary field value if set, zero value otherwise.
func (o *ImportSummaryObject) GetImportSummary() ImportSummary {
	if o == nil || IsNil(o.ImportSummary) {
		var ret ImportSummary
		return ret
	}
	return *o.ImportSummary
}

// GetImportSummaryOk returns a tuple with the ImportSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSummaryObject) GetImportSummaryOk() (*ImportSummary, bool) {
	if o == nil || IsNil(o.ImportSummary) {
		return nil, false
	}
	return o.ImportSummary, true
}

// HasImportSummary returns a boolean if a field has been set.
func (o *ImportSummaryObject) HasImportSummary() bool {
	if o != nil && !IsNil(o.ImportSummary) {
		return true
	}

	return false
}

// SetImportSummary gets a reference to the given ImportSummary and assigns it to the ImportSummary field.
func (o *ImportSummaryObject) SetImportSummary(v ImportSummary) {
	o.ImportSummary = &v
}

func (o ImportSummaryObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportSummaryObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImportSummary) {
		toSerialize["ImportSummary"] = o.ImportSummary
	}
	return toSerialize, nil
}

type NullableImportSummaryObject struct {
	value *ImportSummaryObject
	isSet bool
}

func (v NullableImportSummaryObject) Get() *ImportSummaryObject {
	return v.value
}

func (v *NullableImportSummaryObject) Set(val *ImportSummaryObject) {
	v.value = val
	v.isSet = true
}

func (v NullableImportSummaryObject) IsSet() bool {
	return v.isSet
}

func (v *NullableImportSummaryObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportSummaryObject(val *ImportSummaryObject) *NullableImportSummaryObject {
	return &NullableImportSummaryObject{value: val, isSet: true}
}

func (v NullableImportSummaryObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportSummaryObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


