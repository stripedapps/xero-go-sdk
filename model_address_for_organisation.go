/*
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40.0
Contact: api@xero.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddressForOrganisation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressForOrganisation{}

// AddressForOrganisation struct for AddressForOrganisation
type AddressForOrganisation struct {
	// define the type of address
	AddressType *string `json:"AddressType,omitempty"`
	// max length = 500
	AddressLine1 *string `json:"AddressLine1,omitempty"`
	// max length = 500
	AddressLine2 *string `json:"AddressLine2,omitempty"`
	// max length = 500
	AddressLine3 *string `json:"AddressLine3,omitempty"`
	// max length = 500
	AddressLine4 *string `json:"AddressLine4,omitempty"`
	// max length = 255
	City *string `json:"City,omitempty"`
	// max length = 255
	Region *string `json:"Region,omitempty"`
	// max length = 50
	PostalCode *string `json:"PostalCode,omitempty"`
	// max length = 50, [A-Z], [a-z] only
	Country *string `json:"Country,omitempty"`
	// max length = 255
	AttentionTo *string `json:"AttentionTo,omitempty"`
}

// NewAddressForOrganisation instantiates a new AddressForOrganisation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressForOrganisation() *AddressForOrganisation {
	this := AddressForOrganisation{}
	return &this
}

// NewAddressForOrganisationWithDefaults instantiates a new AddressForOrganisation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressForOrganisationWithDefaults() *AddressForOrganisation {
	this := AddressForOrganisation{}
	return &this
}

// GetAddressType returns the AddressType field value if set, zero value otherwise.
func (o *AddressForOrganisation) GetAddressType() string {
	if o == nil || IsNil(o.AddressType) {
		var ret string
		return ret
	}
	return *o.AddressType
}

// GetAddressTypeOk returns a tuple with the AddressType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressForOrganisation) GetAddressTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AddressType) {
		return nil, false
	}
	return o.AddressType, true
}

// HasAddressType returns a boolean if a field has been set.
func (o *AddressForOrganisation) HasAddressType() bool {
	if o != nil && !IsNil(o.AddressType) {
		return true
	}

	return false
}

// SetAddressType gets a reference to the given string and assigns it to the AddressType field.
func (o *AddressForOrganisation) SetAddressType(v string) {
	o.AddressType = &v
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise.
func (o *AddressForOrganisation) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1) {
		var ret string
		return ret
	}
	return *o.AddressLine1
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressForOrganisation) GetAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine1) {
		return nil, false
	}
	return o.AddressLine1, true
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *AddressForOrganisation) HasAddressLine1() bool {
	if o != nil && !IsNil(o.AddressLine1) {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given string and assigns it to the AddressLine1 field.
func (o *AddressForOrganisation) SetAddressLine1(v string) {
	o.AddressLine1 = &v
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise.
func (o *AddressForOrganisation) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2) {
		var ret string
		return ret
	}
	return *o.AddressLine2
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressForOrganisation) GetAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine2) {
		return nil, false
	}
	return o.AddressLine2, true
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *AddressForOrganisation) HasAddressLine2() bool {
	if o != nil && !IsNil(o.AddressLine2) {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given string and assigns it to the AddressLine2 field.
func (o *AddressForOrganisation) SetAddressLine2(v string) {
	o.AddressLine2 = &v
}

// GetAddressLine3 returns the AddressLine3 field value if set, zero value otherwise.
func (o *AddressForOrganisation) GetAddressLine3() string {
	if o == nil || IsNil(o.AddressLine3) {
		var ret string
		return ret
	}
	return *o.AddressLine3
}

// GetAddressLine3Ok returns a tuple with the AddressLine3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressForOrganisation) GetAddressLine3Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine3) {
		return nil, false
	}
	return o.AddressLine3, true
}

// HasAddressLine3 returns a boolean if a field has been set.
func (o *AddressForOrganisation) HasAddressLine3() bool {
	if o != nil && !IsNil(o.AddressLine3) {
		return true
	}

	return false
}

// SetAddressLine3 gets a reference to the given string and assigns it to the AddressLine3 field.
func (o *AddressForOrganisation) SetAddressLine3(v string) {
	o.AddressLine3 = &v
}

// GetAddressLine4 returns the AddressLine4 field value if set, zero value otherwise.
func (o *AddressForOrganisation) GetAddressLine4() string {
	if o == nil || IsNil(o.AddressLine4) {
		var ret string
		return ret
	}
	return *o.AddressLine4
}

// GetAddressLine4Ok returns a tuple with the AddressLine4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressForOrganisation) GetAddressLine4Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine4) {
		return nil, false
	}
	return o.AddressLine4, true
}

// HasAddressLine4 returns a boolean if a field has been set.
func (o *AddressForOrganisation) HasAddressLine4() bool {
	if o != nil && !IsNil(o.AddressLine4) {
		return true
	}

	return false
}

// SetAddressLine4 gets a reference to the given string and assigns it to the AddressLine4 field.
func (o *AddressForOrganisation) SetAddressLine4(v string) {
	o.AddressLine4 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *AddressForOrganisation) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressForOrganisation) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *AddressForOrganisation) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *AddressForOrganisation) SetCity(v string) {
	o.City = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AddressForOrganisation) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressForOrganisation) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AddressForOrganisation) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AddressForOrganisation) SetRegion(v string) {
	o.Region = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *AddressForOrganisation) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressForOrganisation) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *AddressForOrganisation) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *AddressForOrganisation) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *AddressForOrganisation) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressForOrganisation) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *AddressForOrganisation) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *AddressForOrganisation) SetCountry(v string) {
	o.Country = &v
}

// GetAttentionTo returns the AttentionTo field value if set, zero value otherwise.
func (o *AddressForOrganisation) GetAttentionTo() string {
	if o == nil || IsNil(o.AttentionTo) {
		var ret string
		return ret
	}
	return *o.AttentionTo
}

// GetAttentionToOk returns a tuple with the AttentionTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressForOrganisation) GetAttentionToOk() (*string, bool) {
	if o == nil || IsNil(o.AttentionTo) {
		return nil, false
	}
	return o.AttentionTo, true
}

// HasAttentionTo returns a boolean if a field has been set.
func (o *AddressForOrganisation) HasAttentionTo() bool {
	if o != nil && !IsNil(o.AttentionTo) {
		return true
	}

	return false
}

// SetAttentionTo gets a reference to the given string and assigns it to the AttentionTo field.
func (o *AddressForOrganisation) SetAttentionTo(v string) {
	o.AttentionTo = &v
}

func (o AddressForOrganisation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressForOrganisation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddressType) {
		toSerialize["AddressType"] = o.AddressType
	}
	if !IsNil(o.AddressLine1) {
		toSerialize["AddressLine1"] = o.AddressLine1
	}
	if !IsNil(o.AddressLine2) {
		toSerialize["AddressLine2"] = o.AddressLine2
	}
	if !IsNil(o.AddressLine3) {
		toSerialize["AddressLine3"] = o.AddressLine3
	}
	if !IsNil(o.AddressLine4) {
		toSerialize["AddressLine4"] = o.AddressLine4
	}
	if !IsNil(o.City) {
		toSerialize["City"] = o.City
	}
	if !IsNil(o.Region) {
		toSerialize["Region"] = o.Region
	}
	if !IsNil(o.PostalCode) {
		toSerialize["PostalCode"] = o.PostalCode
	}
	if !IsNil(o.Country) {
		toSerialize["Country"] = o.Country
	}
	if !IsNil(o.AttentionTo) {
		toSerialize["AttentionTo"] = o.AttentionTo
	}
	return toSerialize, nil
}

type NullableAddressForOrganisation struct {
	value *AddressForOrganisation
	isSet bool
}

func (v NullableAddressForOrganisation) Get() *AddressForOrganisation {
	return v.value
}

func (v *NullableAddressForOrganisation) Set(val *AddressForOrganisation) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressForOrganisation) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressForOrganisation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressForOrganisation(val *AddressForOrganisation) *NullableAddressForOrganisation {
	return &NullableAddressForOrganisation{value: val, isSet: true}
}

func (v NullableAddressForOrganisation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressForOrganisation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


