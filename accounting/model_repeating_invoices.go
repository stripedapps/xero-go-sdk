/*
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40.0
Contact: api@xero.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RepeatingInvoices type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepeatingInvoices{}

// RepeatingInvoices struct for RepeatingInvoices
type RepeatingInvoices struct {
	RepeatingInvoices []RepeatingInvoice `json:"RepeatingInvoices,omitempty"`
}

// NewRepeatingInvoices instantiates a new RepeatingInvoices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepeatingInvoices() *RepeatingInvoices {
	this := RepeatingInvoices{}
	return &this
}

// NewRepeatingInvoicesWithDefaults instantiates a new RepeatingInvoices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepeatingInvoicesWithDefaults() *RepeatingInvoices {
	this := RepeatingInvoices{}
	return &this
}

// GetRepeatingInvoices returns the RepeatingInvoices field value if set, zero value otherwise.
func (o *RepeatingInvoices) GetRepeatingInvoices() []RepeatingInvoice {
	if o == nil || IsNil(o.RepeatingInvoices) {
		var ret []RepeatingInvoice
		return ret
	}
	return o.RepeatingInvoices
}

// GetRepeatingInvoicesOk returns a tuple with the RepeatingInvoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepeatingInvoices) GetRepeatingInvoicesOk() ([]RepeatingInvoice, bool) {
	if o == nil || IsNil(o.RepeatingInvoices) {
		return nil, false
	}
	return o.RepeatingInvoices, true
}

// HasRepeatingInvoices returns a boolean if a field has been set.
func (o *RepeatingInvoices) HasRepeatingInvoices() bool {
	if o != nil && !IsNil(o.RepeatingInvoices) {
		return true
	}

	return false
}

// SetRepeatingInvoices gets a reference to the given []RepeatingInvoice and assigns it to the RepeatingInvoices field.
func (o *RepeatingInvoices) SetRepeatingInvoices(v []RepeatingInvoice) {
	o.RepeatingInvoices = v
}

func (o RepeatingInvoices) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepeatingInvoices) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RepeatingInvoices) {
		toSerialize["RepeatingInvoices"] = o.RepeatingInvoices
	}
	return toSerialize, nil
}

type NullableRepeatingInvoices struct {
	value *RepeatingInvoices
	isSet bool
}

func (v NullableRepeatingInvoices) Get() *RepeatingInvoices {
	return v.value
}

func (v *NullableRepeatingInvoices) Set(val *RepeatingInvoices) {
	v.value = val
	v.isSet = true
}

func (v NullableRepeatingInvoices) IsSet() bool {
	return v.isSet
}

func (v *NullableRepeatingInvoices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepeatingInvoices(val *RepeatingInvoices) *NullableRepeatingInvoices {
	return &NullableRepeatingInvoices{value: val, isSet: true}
}

func (v NullableRepeatingInvoices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepeatingInvoices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


