/*
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40.0
Contact: api@xero.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PurchaseOrders type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PurchaseOrders{}

// PurchaseOrders struct for PurchaseOrders
type PurchaseOrders struct {
	PurchaseOrders []PurchaseOrder `json:"PurchaseOrders,omitempty"`
}

// NewPurchaseOrders instantiates a new PurchaseOrders object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchaseOrders() *PurchaseOrders {
	this := PurchaseOrders{}
	return &this
}

// NewPurchaseOrdersWithDefaults instantiates a new PurchaseOrders object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchaseOrdersWithDefaults() *PurchaseOrders {
	this := PurchaseOrders{}
	return &this
}

// GetPurchaseOrders returns the PurchaseOrders field value if set, zero value otherwise.
func (o *PurchaseOrders) GetPurchaseOrders() []PurchaseOrder {
	if o == nil || IsNil(o.PurchaseOrders) {
		var ret []PurchaseOrder
		return ret
	}
	return o.PurchaseOrders
}

// GetPurchaseOrdersOk returns a tuple with the PurchaseOrders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrders) GetPurchaseOrdersOk() ([]PurchaseOrder, bool) {
	if o == nil || IsNil(o.PurchaseOrders) {
		return nil, false
	}
	return o.PurchaseOrders, true
}

// HasPurchaseOrders returns a boolean if a field has been set.
func (o *PurchaseOrders) HasPurchaseOrders() bool {
	if o != nil && !IsNil(o.PurchaseOrders) {
		return true
	}

	return false
}

// SetPurchaseOrders gets a reference to the given []PurchaseOrder and assigns it to the PurchaseOrders field.
func (o *PurchaseOrders) SetPurchaseOrders(v []PurchaseOrder) {
	o.PurchaseOrders = v
}

func (o PurchaseOrders) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PurchaseOrders) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PurchaseOrders) {
		toSerialize["PurchaseOrders"] = o.PurchaseOrders
	}
	return toSerialize, nil
}

type NullablePurchaseOrders struct {
	value *PurchaseOrders
	isSet bool
}

func (v NullablePurchaseOrders) Get() *PurchaseOrders {
	return v.value
}

func (v *NullablePurchaseOrders) Set(val *PurchaseOrders) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseOrders) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseOrders) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseOrders(val *PurchaseOrders) *NullablePurchaseOrders {
	return &NullablePurchaseOrders{value: val, isSet: true}
}

func (v NullablePurchaseOrders) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseOrders) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


