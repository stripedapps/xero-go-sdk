/*
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40.0
Contact: api@xero.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Budget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Budget{}

// Budget struct for Budget
type Budget struct {
	// Xero identifier
	BudgetID *string `json:"BudgetID,omitempty"`
	// Type of Budget. OVERALL or TRACKING
	Type *string `json:"Type,omitempty"`
	// The Budget description
	Description *string `json:"Description,omitempty"`
	// UTC timestamp of last update to budget
	UpdatedDateUTC *string `json:"UpdatedDateUTC,omitempty"`
	BudgetLines []BudgetLine `json:"BudgetLines,omitempty"`
	Tracking []TrackingCategory `json:"Tracking,omitempty"`
}

// NewBudget instantiates a new Budget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBudget() *Budget {
	this := Budget{}
	return &this
}

// NewBudgetWithDefaults instantiates a new Budget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBudgetWithDefaults() *Budget {
	this := Budget{}
	return &this
}

// GetBudgetID returns the BudgetID field value if set, zero value otherwise.
func (o *Budget) GetBudgetID() string {
	if o == nil || IsNil(o.BudgetID) {
		var ret string
		return ret
	}
	return *o.BudgetID
}

// GetBudgetIDOk returns a tuple with the BudgetID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Budget) GetBudgetIDOk() (*string, bool) {
	if o == nil || IsNil(o.BudgetID) {
		return nil, false
	}
	return o.BudgetID, true
}

// HasBudgetID returns a boolean if a field has been set.
func (o *Budget) HasBudgetID() bool {
	if o != nil && !IsNil(o.BudgetID) {
		return true
	}

	return false
}

// SetBudgetID gets a reference to the given string and assigns it to the BudgetID field.
func (o *Budget) SetBudgetID(v string) {
	o.BudgetID = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Budget) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Budget) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Budget) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Budget) SetType(v string) {
	o.Type = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Budget) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Budget) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Budget) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Budget) SetDescription(v string) {
	o.Description = &v
}

// GetUpdatedDateUTC returns the UpdatedDateUTC field value if set, zero value otherwise.
func (o *Budget) GetUpdatedDateUTC() string {
	if o == nil || IsNil(o.UpdatedDateUTC) {
		var ret string
		return ret
	}
	return *o.UpdatedDateUTC
}

// GetUpdatedDateUTCOk returns a tuple with the UpdatedDateUTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Budget) GetUpdatedDateUTCOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedDateUTC) {
		return nil, false
	}
	return o.UpdatedDateUTC, true
}

// HasUpdatedDateUTC returns a boolean if a field has been set.
func (o *Budget) HasUpdatedDateUTC() bool {
	if o != nil && !IsNil(o.UpdatedDateUTC) {
		return true
	}

	return false
}

// SetUpdatedDateUTC gets a reference to the given string and assigns it to the UpdatedDateUTC field.
func (o *Budget) SetUpdatedDateUTC(v string) {
	o.UpdatedDateUTC = &v
}

// GetBudgetLines returns the BudgetLines field value if set, zero value otherwise.
func (o *Budget) GetBudgetLines() []BudgetLine {
	if o == nil || IsNil(o.BudgetLines) {
		var ret []BudgetLine
		return ret
	}
	return o.BudgetLines
}

// GetBudgetLinesOk returns a tuple with the BudgetLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Budget) GetBudgetLinesOk() ([]BudgetLine, bool) {
	if o == nil || IsNil(o.BudgetLines) {
		return nil, false
	}
	return o.BudgetLines, true
}

// HasBudgetLines returns a boolean if a field has been set.
func (o *Budget) HasBudgetLines() bool {
	if o != nil && !IsNil(o.BudgetLines) {
		return true
	}

	return false
}

// SetBudgetLines gets a reference to the given []BudgetLine and assigns it to the BudgetLines field.
func (o *Budget) SetBudgetLines(v []BudgetLine) {
	o.BudgetLines = v
}

// GetTracking returns the Tracking field value if set, zero value otherwise.
func (o *Budget) GetTracking() []TrackingCategory {
	if o == nil || IsNil(o.Tracking) {
		var ret []TrackingCategory
		return ret
	}
	return o.Tracking
}

// GetTrackingOk returns a tuple with the Tracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Budget) GetTrackingOk() ([]TrackingCategory, bool) {
	if o == nil || IsNil(o.Tracking) {
		return nil, false
	}
	return o.Tracking, true
}

// HasTracking returns a boolean if a field has been set.
func (o *Budget) HasTracking() bool {
	if o != nil && !IsNil(o.Tracking) {
		return true
	}

	return false
}

// SetTracking gets a reference to the given []TrackingCategory and assigns it to the Tracking field.
func (o *Budget) SetTracking(v []TrackingCategory) {
	o.Tracking = v
}

func (o Budget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Budget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BudgetID) {
		toSerialize["BudgetID"] = o.BudgetID
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.UpdatedDateUTC) {
		toSerialize["UpdatedDateUTC"] = o.UpdatedDateUTC
	}
	if !IsNil(o.BudgetLines) {
		toSerialize["BudgetLines"] = o.BudgetLines
	}
	if !IsNil(o.Tracking) {
		toSerialize["Tracking"] = o.Tracking
	}
	return toSerialize, nil
}

type NullableBudget struct {
	value *Budget
	isSet bool
}

func (v NullableBudget) Get() *Budget {
	return v.value
}

func (v *NullableBudget) Set(val *Budget) {
	v.value = val
	v.isSet = true
}

func (v NullableBudget) IsSet() bool {
	return v.isSet
}

func (v *NullableBudget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBudget(val *Budget) *NullableBudget {
	return &NullableBudget{value: val, isSet: true}
}

func (v NullableBudget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBudget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


