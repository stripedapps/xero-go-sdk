/*
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40.0
Contact: api@xero.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentServices type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentServices{}

// PaymentServices struct for PaymentServices
type PaymentServices struct {
	PaymentServices []PaymentService `json:"PaymentServices,omitempty"`
}

// NewPaymentServices instantiates a new PaymentServices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentServices() *PaymentServices {
	this := PaymentServices{}
	return &this
}

// NewPaymentServicesWithDefaults instantiates a new PaymentServices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServicesWithDefaults() *PaymentServices {
	this := PaymentServices{}
	return &this
}

// GetPaymentServices returns the PaymentServices field value if set, zero value otherwise.
func (o *PaymentServices) GetPaymentServices() []PaymentService {
	if o == nil || IsNil(o.PaymentServices) {
		var ret []PaymentService
		return ret
	}
	return o.PaymentServices
}

// GetPaymentServicesOk returns a tuple with the PaymentServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServices) GetPaymentServicesOk() ([]PaymentService, bool) {
	if o == nil || IsNil(o.PaymentServices) {
		return nil, false
	}
	return o.PaymentServices, true
}

// HasPaymentServices returns a boolean if a field has been set.
func (o *PaymentServices) HasPaymentServices() bool {
	if o != nil && !IsNil(o.PaymentServices) {
		return true
	}

	return false
}

// SetPaymentServices gets a reference to the given []PaymentService and assigns it to the PaymentServices field.
func (o *PaymentServices) SetPaymentServices(v []PaymentService) {
	o.PaymentServices = v
}

func (o PaymentServices) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentServices) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentServices) {
		toSerialize["PaymentServices"] = o.PaymentServices
	}
	return toSerialize, nil
}

type NullablePaymentServices struct {
	value *PaymentServices
	isSet bool
}

func (v NullablePaymentServices) Get() *PaymentServices {
	return v.value
}

func (v *NullablePaymentServices) Set(val *PaymentServices) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentServices) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentServices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentServices(val *PaymentServices) *NullablePaymentServices {
	return &NullablePaymentServices{value: val, isSet: true}
}

func (v NullablePaymentServices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentServices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


