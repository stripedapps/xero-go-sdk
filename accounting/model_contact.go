/*
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40.0
Contact: api@xero.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Contact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Contact{}

// Contact struct for Contact
type Contact struct {
	// Xero identifier
	ContactID *string `json:"ContactID,omitempty"`
	// ID for the destination of a merged contact. Only returned when using paging or when fetching a contact by ContactId or ContactNumber.
	MergedToContactID *string `json:"MergedToContactID,omitempty"`
	// This can be updated via the API only i.e. This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50). If the Contact Number is used, this is displayed as Contact Code in the Contacts UI in Xero.
	ContactNumber *string `json:"ContactNumber,omitempty"`
	// A user defined account number. This can be updated via the API and the Xero UI (max length = 50)
	AccountNumber *string `json:"AccountNumber,omitempty"`
	// Current status of a contact – see contact status types
	ContactStatus *string `json:"ContactStatus,omitempty"`
	// Full name of contact/organisation (max length = 255)
	Name *string `json:"Name,omitempty"`
	// First name of contact person (max length = 255)
	FirstName *string `json:"FirstName,omitempty"`
	// Last name of contact person (max length = 255)
	LastName *string `json:"LastName,omitempty"`
	// Company registration number (max length = 50)
	CompanyNumber *string `json:"CompanyNumber,omitempty"`
	// Email address of contact person (umlauts not supported) (max length  = 255)
	EmailAddress *string `json:"EmailAddress,omitempty"`
	// See contact persons
	ContactPersons []ContactPerson `json:"ContactPersons,omitempty"`
	// Bank account number of contact
	BankAccountDetails *string `json:"BankAccountDetails,omitempty"`
	// Tax number of contact – this is also known as the ABN (Australia), GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and global) in the Xero UI depending on which regionalized version of Xero you are using (max length = 50)
	TaxNumber *string `json:"TaxNumber,omitempty"`
	// The tax type from TaxRates
	AccountsReceivableTaxType *string `json:"AccountsReceivableTaxType,omitempty"`
	// The tax type from TaxRates
	AccountsPayableTaxType *string `json:"AccountsPayableTaxType,omitempty"`
	// Store certain address types for a contact – see address types
	Addresses []Address `json:"Addresses,omitempty"`
	// Store certain phone types for a contact – see phone types
	Phones []Phone `json:"Phones,omitempty"`
	// true or false – Boolean that describes if a contact that has any AP  invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts payable invoice is generated against this contact.
	IsSupplier *bool `json:"IsSupplier,omitempty"`
	// true or false – Boolean that describes if a contact has any AR invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts receivable invoice is generated against this contact.
	IsCustomer *bool `json:"IsCustomer,omitempty"`
	// The default sales line amount type for a contact. Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.
	SalesDefaultLineAmountType *string `json:"SalesDefaultLineAmountType,omitempty"`
	// The default purchases line amount type for a contact Only available when summaryOnly parameter or paging is used, or when fetch by ContactId or ContactNumber.
	PurchasesDefaultLineAmountType *string `json:"PurchasesDefaultLineAmountType,omitempty"`
	DefaultCurrency *CurrencyCode `json:"DefaultCurrency,omitempty"`
	// Store XeroNetworkKey for contacts.
	XeroNetworkKey *string `json:"XeroNetworkKey,omitempty"`
	// The default sales account code for contacts
	SalesDefaultAccountCode *string `json:"SalesDefaultAccountCode,omitempty"`
	// The default purchases account code for contacts
	PurchasesDefaultAccountCode *string `json:"PurchasesDefaultAccountCode,omitempty"`
	// The default sales tracking categories for contacts
	SalesTrackingCategories []SalesTrackingCategory `json:"SalesTrackingCategories,omitempty"`
	// The default purchases tracking categories for contacts
	PurchasesTrackingCategories []SalesTrackingCategory `json:"PurchasesTrackingCategories,omitempty"`
	// The name of the Tracking Category assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories
	TrackingCategoryName *string `json:"TrackingCategoryName,omitempty"`
	// The name of the Tracking Option assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories
	TrackingCategoryOption *string `json:"TrackingCategoryOption,omitempty"`
	PaymentTerms *PaymentTerm `json:"PaymentTerms,omitempty"`
	// UTC timestamp of last update to contact
	UpdatedDateUTC *string `json:"UpdatedDateUTC,omitempty"`
	// Displays which contact groups a contact is included in
	ContactGroups []ContactGroup `json:"ContactGroups,omitempty"`
	// Website address for contact (read only)
	Website *string `json:"Website,omitempty"`
	BrandingTheme *BrandingTheme `json:"BrandingTheme,omitempty"`
	BatchPayments *BatchPaymentDetails `json:"BatchPayments,omitempty"`
	// The default discount rate for the contact (read only)
	Discount *float64 `json:"Discount,omitempty"`
	Balances *Balances `json:"Balances,omitempty"`
	// Displays array of attachments from the API
	Attachments []Attachment `json:"Attachments,omitempty"`
	// A boolean to indicate if a contact has an attachment
	HasAttachmentsField *bool `json:"HasAttachments,omitempty"`
	// Displays validation errors returned from the API
	ValidationErrors []ValidationError `json:"ValidationErrors,omitempty"`
	// A boolean to indicate if a contact has an validation errors
	HasValidationErrorsField *bool `json:"HasValidationErrors,omitempty"`
	// Status of object
	StatusAttributeString *string `json:"StatusAttributeString,omitempty"`
}

// NewContact instantiates a new Contact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContact() *Contact {
	this := Contact{}
	var hasAttachmentsField bool = false
	this.HasAttachmentsField = &hasAttachmentsField
	var hasValidationErrorsField bool = false
	this.HasValidationErrorsField = &hasValidationErrorsField
	return &this
}

// NewContactWithDefaults instantiates a new Contact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactWithDefaults() *Contact {
	this := Contact{}
	var hasAttachmentsField bool = false
	this.HasAttachmentsField = &hasAttachmentsField
	var hasValidationErrorsField bool = false
	this.HasValidationErrorsField = &hasValidationErrorsField
	return &this
}

// GetContactID returns the ContactID field value if set, zero value otherwise.
func (o *Contact) GetContactID() string {
	if o == nil || IsNil(o.ContactID) {
		var ret string
		return ret
	}
	return *o.ContactID
}

// GetContactIDOk returns a tuple with the ContactID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetContactIDOk() (*string, bool) {
	if o == nil || IsNil(o.ContactID) {
		return nil, false
	}
	return o.ContactID, true
}

// HasContactID returns a boolean if a field has been set.
func (o *Contact) HasContactID() bool {
	if o != nil && !IsNil(o.ContactID) {
		return true
	}

	return false
}

// SetContactID gets a reference to the given string and assigns it to the ContactID field.
func (o *Contact) SetContactID(v string) {
	o.ContactID = &v
}

// GetMergedToContactID returns the MergedToContactID field value if set, zero value otherwise.
func (o *Contact) GetMergedToContactID() string {
	if o == nil || IsNil(o.MergedToContactID) {
		var ret string
		return ret
	}
	return *o.MergedToContactID
}

// GetMergedToContactIDOk returns a tuple with the MergedToContactID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetMergedToContactIDOk() (*string, bool) {
	if o == nil || IsNil(o.MergedToContactID) {
		return nil, false
	}
	return o.MergedToContactID, true
}

// HasMergedToContactID returns a boolean if a field has been set.
func (o *Contact) HasMergedToContactID() bool {
	if o != nil && !IsNil(o.MergedToContactID) {
		return true
	}

	return false
}

// SetMergedToContactID gets a reference to the given string and assigns it to the MergedToContactID field.
func (o *Contact) SetMergedToContactID(v string) {
	o.MergedToContactID = &v
}

// GetContactNumber returns the ContactNumber field value if set, zero value otherwise.
func (o *Contact) GetContactNumber() string {
	if o == nil || IsNil(o.ContactNumber) {
		var ret string
		return ret
	}
	return *o.ContactNumber
}

// GetContactNumberOk returns a tuple with the ContactNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetContactNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ContactNumber) {
		return nil, false
	}
	return o.ContactNumber, true
}

// HasContactNumber returns a boolean if a field has been set.
func (o *Contact) HasContactNumber() bool {
	if o != nil && !IsNil(o.ContactNumber) {
		return true
	}

	return false
}

// SetContactNumber gets a reference to the given string and assigns it to the ContactNumber field.
func (o *Contact) SetContactNumber(v string) {
	o.ContactNumber = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *Contact) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *Contact) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *Contact) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetContactStatus returns the ContactStatus field value if set, zero value otherwise.
func (o *Contact) GetContactStatus() string {
	if o == nil || IsNil(o.ContactStatus) {
		var ret string
		return ret
	}
	return *o.ContactStatus
}

// GetContactStatusOk returns a tuple with the ContactStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetContactStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ContactStatus) {
		return nil, false
	}
	return o.ContactStatus, true
}

// HasContactStatus returns a boolean if a field has been set.
func (o *Contact) HasContactStatus() bool {
	if o != nil && !IsNil(o.ContactStatus) {
		return true
	}

	return false
}

// SetContactStatus gets a reference to the given string and assigns it to the ContactStatus field.
func (o *Contact) SetContactStatus(v string) {
	o.ContactStatus = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Contact) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Contact) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Contact) SetName(v string) {
	o.Name = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *Contact) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *Contact) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *Contact) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *Contact) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *Contact) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *Contact) SetLastName(v string) {
	o.LastName = &v
}

// GetCompanyNumber returns the CompanyNumber field value if set, zero value otherwise.
func (o *Contact) GetCompanyNumber() string {
	if o == nil || IsNil(o.CompanyNumber) {
		var ret string
		return ret
	}
	return *o.CompanyNumber
}

// GetCompanyNumberOk returns a tuple with the CompanyNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetCompanyNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyNumber) {
		return nil, false
	}
	return o.CompanyNumber, true
}

// HasCompanyNumber returns a boolean if a field has been set.
func (o *Contact) HasCompanyNumber() bool {
	if o != nil && !IsNil(o.CompanyNumber) {
		return true
	}

	return false
}

// SetCompanyNumber gets a reference to the given string and assigns it to the CompanyNumber field.
func (o *Contact) SetCompanyNumber(v string) {
	o.CompanyNumber = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *Contact) GetEmailAddress() string {
	if o == nil || IsNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *Contact) HasEmailAddress() bool {
	if o != nil && !IsNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *Contact) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetContactPersons returns the ContactPersons field value if set, zero value otherwise.
func (o *Contact) GetContactPersons() []ContactPerson {
	if o == nil || IsNil(o.ContactPersons) {
		var ret []ContactPerson
		return ret
	}
	return o.ContactPersons
}

// GetContactPersonsOk returns a tuple with the ContactPersons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetContactPersonsOk() ([]ContactPerson, bool) {
	if o == nil || IsNil(o.ContactPersons) {
		return nil, false
	}
	return o.ContactPersons, true
}

// HasContactPersons returns a boolean if a field has been set.
func (o *Contact) HasContactPersons() bool {
	if o != nil && !IsNil(o.ContactPersons) {
		return true
	}

	return false
}

// SetContactPersons gets a reference to the given []ContactPerson and assigns it to the ContactPersons field.
func (o *Contact) SetContactPersons(v []ContactPerson) {
	o.ContactPersons = v
}

// GetBankAccountDetails returns the BankAccountDetails field value if set, zero value otherwise.
func (o *Contact) GetBankAccountDetails() string {
	if o == nil || IsNil(o.BankAccountDetails) {
		var ret string
		return ret
	}
	return *o.BankAccountDetails
}

// GetBankAccountDetailsOk returns a tuple with the BankAccountDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetBankAccountDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.BankAccountDetails) {
		return nil, false
	}
	return o.BankAccountDetails, true
}

// HasBankAccountDetails returns a boolean if a field has been set.
func (o *Contact) HasBankAccountDetails() bool {
	if o != nil && !IsNil(o.BankAccountDetails) {
		return true
	}

	return false
}

// SetBankAccountDetails gets a reference to the given string and assigns it to the BankAccountDetails field.
func (o *Contact) SetBankAccountDetails(v string) {
	o.BankAccountDetails = &v
}

// GetTaxNumber returns the TaxNumber field value if set, zero value otherwise.
func (o *Contact) GetTaxNumber() string {
	if o == nil || IsNil(o.TaxNumber) {
		var ret string
		return ret
	}
	return *o.TaxNumber
}

// GetTaxNumberOk returns a tuple with the TaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetTaxNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TaxNumber) {
		return nil, false
	}
	return o.TaxNumber, true
}

// HasTaxNumber returns a boolean if a field has been set.
func (o *Contact) HasTaxNumber() bool {
	if o != nil && !IsNil(o.TaxNumber) {
		return true
	}

	return false
}

// SetTaxNumber gets a reference to the given string and assigns it to the TaxNumber field.
func (o *Contact) SetTaxNumber(v string) {
	o.TaxNumber = &v
}

// GetAccountsReceivableTaxType returns the AccountsReceivableTaxType field value if set, zero value otherwise.
func (o *Contact) GetAccountsReceivableTaxType() string {
	if o == nil || IsNil(o.AccountsReceivableTaxType) {
		var ret string
		return ret
	}
	return *o.AccountsReceivableTaxType
}

// GetAccountsReceivableTaxTypeOk returns a tuple with the AccountsReceivableTaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAccountsReceivableTaxTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountsReceivableTaxType) {
		return nil, false
	}
	return o.AccountsReceivableTaxType, true
}

// HasAccountsReceivableTaxType returns a boolean if a field has been set.
func (o *Contact) HasAccountsReceivableTaxType() bool {
	if o != nil && !IsNil(o.AccountsReceivableTaxType) {
		return true
	}

	return false
}

// SetAccountsReceivableTaxType gets a reference to the given string and assigns it to the AccountsReceivableTaxType field.
func (o *Contact) SetAccountsReceivableTaxType(v string) {
	o.AccountsReceivableTaxType = &v
}

// GetAccountsPayableTaxType returns the AccountsPayableTaxType field value if set, zero value otherwise.
func (o *Contact) GetAccountsPayableTaxType() string {
	if o == nil || IsNil(o.AccountsPayableTaxType) {
		var ret string
		return ret
	}
	return *o.AccountsPayableTaxType
}

// GetAccountsPayableTaxTypeOk returns a tuple with the AccountsPayableTaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAccountsPayableTaxTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountsPayableTaxType) {
		return nil, false
	}
	return o.AccountsPayableTaxType, true
}

// HasAccountsPayableTaxType returns a boolean if a field has been set.
func (o *Contact) HasAccountsPayableTaxType() bool {
	if o != nil && !IsNil(o.AccountsPayableTaxType) {
		return true
	}

	return false
}

// SetAccountsPayableTaxType gets a reference to the given string and assigns it to the AccountsPayableTaxType field.
func (o *Contact) SetAccountsPayableTaxType(v string) {
	o.AccountsPayableTaxType = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *Contact) GetAddresses() []Address {
	if o == nil || IsNil(o.Addresses) {
		var ret []Address
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAddressesOk() ([]Address, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *Contact) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []Address and assigns it to the Addresses field.
func (o *Contact) SetAddresses(v []Address) {
	o.Addresses = v
}

// GetPhones returns the Phones field value if set, zero value otherwise.
func (o *Contact) GetPhones() []Phone {
	if o == nil || IsNil(o.Phones) {
		var ret []Phone
		return ret
	}
	return o.Phones
}

// GetPhonesOk returns a tuple with the Phones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPhonesOk() ([]Phone, bool) {
	if o == nil || IsNil(o.Phones) {
		return nil, false
	}
	return o.Phones, true
}

// HasPhones returns a boolean if a field has been set.
func (o *Contact) HasPhones() bool {
	if o != nil && !IsNil(o.Phones) {
		return true
	}

	return false
}

// SetPhones gets a reference to the given []Phone and assigns it to the Phones field.
func (o *Contact) SetPhones(v []Phone) {
	o.Phones = v
}

// GetIsSupplier returns the IsSupplier field value if set, zero value otherwise.
func (o *Contact) GetIsSupplier() bool {
	if o == nil || IsNil(o.IsSupplier) {
		var ret bool
		return ret
	}
	return *o.IsSupplier
}

// GetIsSupplierOk returns a tuple with the IsSupplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetIsSupplierOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSupplier) {
		return nil, false
	}
	return o.IsSupplier, true
}

// HasIsSupplier returns a boolean if a field has been set.
func (o *Contact) HasIsSupplier() bool {
	if o != nil && !IsNil(o.IsSupplier) {
		return true
	}

	return false
}

// SetIsSupplier gets a reference to the given bool and assigns it to the IsSupplier field.
func (o *Contact) SetIsSupplier(v bool) {
	o.IsSupplier = &v
}

// GetIsCustomer returns the IsCustomer field value if set, zero value otherwise.
func (o *Contact) GetIsCustomer() bool {
	if o == nil || IsNil(o.IsCustomer) {
		var ret bool
		return ret
	}
	return *o.IsCustomer
}

// GetIsCustomerOk returns a tuple with the IsCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetIsCustomerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCustomer) {
		return nil, false
	}
	return o.IsCustomer, true
}

// HasIsCustomer returns a boolean if a field has been set.
func (o *Contact) HasIsCustomer() bool {
	if o != nil && !IsNil(o.IsCustomer) {
		return true
	}

	return false
}

// SetIsCustomer gets a reference to the given bool and assigns it to the IsCustomer field.
func (o *Contact) SetIsCustomer(v bool) {
	o.IsCustomer = &v
}

// GetSalesDefaultLineAmountType returns the SalesDefaultLineAmountType field value if set, zero value otherwise.
func (o *Contact) GetSalesDefaultLineAmountType() string {
	if o == nil || IsNil(o.SalesDefaultLineAmountType) {
		var ret string
		return ret
	}
	return *o.SalesDefaultLineAmountType
}

// GetSalesDefaultLineAmountTypeOk returns a tuple with the SalesDefaultLineAmountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetSalesDefaultLineAmountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SalesDefaultLineAmountType) {
		return nil, false
	}
	return o.SalesDefaultLineAmountType, true
}

// HasSalesDefaultLineAmountType returns a boolean if a field has been set.
func (o *Contact) HasSalesDefaultLineAmountType() bool {
	if o != nil && !IsNil(o.SalesDefaultLineAmountType) {
		return true
	}

	return false
}

// SetSalesDefaultLineAmountType gets a reference to the given string and assigns it to the SalesDefaultLineAmountType field.
func (o *Contact) SetSalesDefaultLineAmountType(v string) {
	o.SalesDefaultLineAmountType = &v
}

// GetPurchasesDefaultLineAmountType returns the PurchasesDefaultLineAmountType field value if set, zero value otherwise.
func (o *Contact) GetPurchasesDefaultLineAmountType() string {
	if o == nil || IsNil(o.PurchasesDefaultLineAmountType) {
		var ret string
		return ret
	}
	return *o.PurchasesDefaultLineAmountType
}

// GetPurchasesDefaultLineAmountTypeOk returns a tuple with the PurchasesDefaultLineAmountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPurchasesDefaultLineAmountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasesDefaultLineAmountType) {
		return nil, false
	}
	return o.PurchasesDefaultLineAmountType, true
}

// HasPurchasesDefaultLineAmountType returns a boolean if a field has been set.
func (o *Contact) HasPurchasesDefaultLineAmountType() bool {
	if o != nil && !IsNil(o.PurchasesDefaultLineAmountType) {
		return true
	}

	return false
}

// SetPurchasesDefaultLineAmountType gets a reference to the given string and assigns it to the PurchasesDefaultLineAmountType field.
func (o *Contact) SetPurchasesDefaultLineAmountType(v string) {
	o.PurchasesDefaultLineAmountType = &v
}

// GetDefaultCurrency returns the DefaultCurrency field value if set, zero value otherwise.
func (o *Contact) GetDefaultCurrency() CurrencyCode {
	if o == nil || IsNil(o.DefaultCurrency) {
		var ret CurrencyCode
		return ret
	}
	return *o.DefaultCurrency
}

// GetDefaultCurrencyOk returns a tuple with the DefaultCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetDefaultCurrencyOk() (*CurrencyCode, bool) {
	if o == nil || IsNil(o.DefaultCurrency) {
		return nil, false
	}
	return o.DefaultCurrency, true
}

// HasDefaultCurrency returns a boolean if a field has been set.
func (o *Contact) HasDefaultCurrency() bool {
	if o != nil && !IsNil(o.DefaultCurrency) {
		return true
	}

	return false
}

// SetDefaultCurrency gets a reference to the given CurrencyCode and assigns it to the DefaultCurrency field.
func (o *Contact) SetDefaultCurrency(v CurrencyCode) {
	o.DefaultCurrency = &v
}

// GetXeroNetworkKey returns the XeroNetworkKey field value if set, zero value otherwise.
func (o *Contact) GetXeroNetworkKey() string {
	if o == nil || IsNil(o.XeroNetworkKey) {
		var ret string
		return ret
	}
	return *o.XeroNetworkKey
}

// GetXeroNetworkKeyOk returns a tuple with the XeroNetworkKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetXeroNetworkKeyOk() (*string, bool) {
	if o == nil || IsNil(o.XeroNetworkKey) {
		return nil, false
	}
	return o.XeroNetworkKey, true
}

// HasXeroNetworkKey returns a boolean if a field has been set.
func (o *Contact) HasXeroNetworkKey() bool {
	if o != nil && !IsNil(o.XeroNetworkKey) {
		return true
	}

	return false
}

// SetXeroNetworkKey gets a reference to the given string and assigns it to the XeroNetworkKey field.
func (o *Contact) SetXeroNetworkKey(v string) {
	o.XeroNetworkKey = &v
}

// GetSalesDefaultAccountCode returns the SalesDefaultAccountCode field value if set, zero value otherwise.
func (o *Contact) GetSalesDefaultAccountCode() string {
	if o == nil || IsNil(o.SalesDefaultAccountCode) {
		var ret string
		return ret
	}
	return *o.SalesDefaultAccountCode
}

// GetSalesDefaultAccountCodeOk returns a tuple with the SalesDefaultAccountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetSalesDefaultAccountCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SalesDefaultAccountCode) {
		return nil, false
	}
	return o.SalesDefaultAccountCode, true
}

// HasSalesDefaultAccountCode returns a boolean if a field has been set.
func (o *Contact) HasSalesDefaultAccountCode() bool {
	if o != nil && !IsNil(o.SalesDefaultAccountCode) {
		return true
	}

	return false
}

// SetSalesDefaultAccountCode gets a reference to the given string and assigns it to the SalesDefaultAccountCode field.
func (o *Contact) SetSalesDefaultAccountCode(v string) {
	o.SalesDefaultAccountCode = &v
}

// GetPurchasesDefaultAccountCode returns the PurchasesDefaultAccountCode field value if set, zero value otherwise.
func (o *Contact) GetPurchasesDefaultAccountCode() string {
	if o == nil || IsNil(o.PurchasesDefaultAccountCode) {
		var ret string
		return ret
	}
	return *o.PurchasesDefaultAccountCode
}

// GetPurchasesDefaultAccountCodeOk returns a tuple with the PurchasesDefaultAccountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPurchasesDefaultAccountCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasesDefaultAccountCode) {
		return nil, false
	}
	return o.PurchasesDefaultAccountCode, true
}

// HasPurchasesDefaultAccountCode returns a boolean if a field has been set.
func (o *Contact) HasPurchasesDefaultAccountCode() bool {
	if o != nil && !IsNil(o.PurchasesDefaultAccountCode) {
		return true
	}

	return false
}

// SetPurchasesDefaultAccountCode gets a reference to the given string and assigns it to the PurchasesDefaultAccountCode field.
func (o *Contact) SetPurchasesDefaultAccountCode(v string) {
	o.PurchasesDefaultAccountCode = &v
}

// GetSalesTrackingCategories returns the SalesTrackingCategories field value if set, zero value otherwise.
func (o *Contact) GetSalesTrackingCategories() []SalesTrackingCategory {
	if o == nil || IsNil(o.SalesTrackingCategories) {
		var ret []SalesTrackingCategory
		return ret
	}
	return o.SalesTrackingCategories
}

// GetSalesTrackingCategoriesOk returns a tuple with the SalesTrackingCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetSalesTrackingCategoriesOk() ([]SalesTrackingCategory, bool) {
	if o == nil || IsNil(o.SalesTrackingCategories) {
		return nil, false
	}
	return o.SalesTrackingCategories, true
}

// HasSalesTrackingCategories returns a boolean if a field has been set.
func (o *Contact) HasSalesTrackingCategories() bool {
	if o != nil && !IsNil(o.SalesTrackingCategories) {
		return true
	}

	return false
}

// SetSalesTrackingCategories gets a reference to the given []SalesTrackingCategory and assigns it to the SalesTrackingCategories field.
func (o *Contact) SetSalesTrackingCategories(v []SalesTrackingCategory) {
	o.SalesTrackingCategories = v
}

// GetPurchasesTrackingCategories returns the PurchasesTrackingCategories field value if set, zero value otherwise.
func (o *Contact) GetPurchasesTrackingCategories() []SalesTrackingCategory {
	if o == nil || IsNil(o.PurchasesTrackingCategories) {
		var ret []SalesTrackingCategory
		return ret
	}
	return o.PurchasesTrackingCategories
}

// GetPurchasesTrackingCategoriesOk returns a tuple with the PurchasesTrackingCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPurchasesTrackingCategoriesOk() ([]SalesTrackingCategory, bool) {
	if o == nil || IsNil(o.PurchasesTrackingCategories) {
		return nil, false
	}
	return o.PurchasesTrackingCategories, true
}

// HasPurchasesTrackingCategories returns a boolean if a field has been set.
func (o *Contact) HasPurchasesTrackingCategories() bool {
	if o != nil && !IsNil(o.PurchasesTrackingCategories) {
		return true
	}

	return false
}

// SetPurchasesTrackingCategories gets a reference to the given []SalesTrackingCategory and assigns it to the PurchasesTrackingCategories field.
func (o *Contact) SetPurchasesTrackingCategories(v []SalesTrackingCategory) {
	o.PurchasesTrackingCategories = v
}

// GetTrackingCategoryName returns the TrackingCategoryName field value if set, zero value otherwise.
func (o *Contact) GetTrackingCategoryName() string {
	if o == nil || IsNil(o.TrackingCategoryName) {
		var ret string
		return ret
	}
	return *o.TrackingCategoryName
}

// GetTrackingCategoryNameOk returns a tuple with the TrackingCategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetTrackingCategoryNameOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingCategoryName) {
		return nil, false
	}
	return o.TrackingCategoryName, true
}

// HasTrackingCategoryName returns a boolean if a field has been set.
func (o *Contact) HasTrackingCategoryName() bool {
	if o != nil && !IsNil(o.TrackingCategoryName) {
		return true
	}

	return false
}

// SetTrackingCategoryName gets a reference to the given string and assigns it to the TrackingCategoryName field.
func (o *Contact) SetTrackingCategoryName(v string) {
	o.TrackingCategoryName = &v
}

// GetTrackingCategoryOption returns the TrackingCategoryOption field value if set, zero value otherwise.
func (o *Contact) GetTrackingCategoryOption() string {
	if o == nil || IsNil(o.TrackingCategoryOption) {
		var ret string
		return ret
	}
	return *o.TrackingCategoryOption
}

// GetTrackingCategoryOptionOk returns a tuple with the TrackingCategoryOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetTrackingCategoryOptionOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingCategoryOption) {
		return nil, false
	}
	return o.TrackingCategoryOption, true
}

// HasTrackingCategoryOption returns a boolean if a field has been set.
func (o *Contact) HasTrackingCategoryOption() bool {
	if o != nil && !IsNil(o.TrackingCategoryOption) {
		return true
	}

	return false
}

// SetTrackingCategoryOption gets a reference to the given string and assigns it to the TrackingCategoryOption field.
func (o *Contact) SetTrackingCategoryOption(v string) {
	o.TrackingCategoryOption = &v
}

// GetPaymentTerms returns the PaymentTerms field value if set, zero value otherwise.
func (o *Contact) GetPaymentTerms() PaymentTerm {
	if o == nil || IsNil(o.PaymentTerms) {
		var ret PaymentTerm
		return ret
	}
	return *o.PaymentTerms
}

// GetPaymentTermsOk returns a tuple with the PaymentTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPaymentTermsOk() (*PaymentTerm, bool) {
	if o == nil || IsNil(o.PaymentTerms) {
		return nil, false
	}
	return o.PaymentTerms, true
}

// HasPaymentTerms returns a boolean if a field has been set.
func (o *Contact) HasPaymentTerms() bool {
	if o != nil && !IsNil(o.PaymentTerms) {
		return true
	}

	return false
}

// SetPaymentTerms gets a reference to the given PaymentTerm and assigns it to the PaymentTerms field.
func (o *Contact) SetPaymentTerms(v PaymentTerm) {
	o.PaymentTerms = &v
}

// GetUpdatedDateUTC returns the UpdatedDateUTC field value if set, zero value otherwise.
func (o *Contact) GetUpdatedDateUTC() string {
	if o == nil || IsNil(o.UpdatedDateUTC) {
		var ret string
		return ret
	}
	return *o.UpdatedDateUTC
}

// GetUpdatedDateUTCOk returns a tuple with the UpdatedDateUTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetUpdatedDateUTCOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedDateUTC) {
		return nil, false
	}
	return o.UpdatedDateUTC, true
}

// HasUpdatedDateUTC returns a boolean if a field has been set.
func (o *Contact) HasUpdatedDateUTC() bool {
	if o != nil && !IsNil(o.UpdatedDateUTC) {
		return true
	}

	return false
}

// SetUpdatedDateUTC gets a reference to the given string and assigns it to the UpdatedDateUTC field.
func (o *Contact) SetUpdatedDateUTC(v string) {
	o.UpdatedDateUTC = &v
}

// GetContactGroups returns the ContactGroups field value if set, zero value otherwise.
func (o *Contact) GetContactGroups() []ContactGroup {
	if o == nil || IsNil(o.ContactGroups) {
		var ret []ContactGroup
		return ret
	}
	return o.ContactGroups
}

// GetContactGroupsOk returns a tuple with the ContactGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetContactGroupsOk() ([]ContactGroup, bool) {
	if o == nil || IsNil(o.ContactGroups) {
		return nil, false
	}
	return o.ContactGroups, true
}

// HasContactGroups returns a boolean if a field has been set.
func (o *Contact) HasContactGroups() bool {
	if o != nil && !IsNil(o.ContactGroups) {
		return true
	}

	return false
}

// SetContactGroups gets a reference to the given []ContactGroup and assigns it to the ContactGroups field.
func (o *Contact) SetContactGroups(v []ContactGroup) {
	o.ContactGroups = v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *Contact) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *Contact) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *Contact) SetWebsite(v string) {
	o.Website = &v
}

// GetBrandingTheme returns the BrandingTheme field value if set, zero value otherwise.
func (o *Contact) GetBrandingTheme() BrandingTheme {
	if o == nil || IsNil(o.BrandingTheme) {
		var ret BrandingTheme
		return ret
	}
	return *o.BrandingTheme
}

// GetBrandingThemeOk returns a tuple with the BrandingTheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetBrandingThemeOk() (*BrandingTheme, bool) {
	if o == nil || IsNil(o.BrandingTheme) {
		return nil, false
	}
	return o.BrandingTheme, true
}

// HasBrandingTheme returns a boolean if a field has been set.
func (o *Contact) HasBrandingTheme() bool {
	if o != nil && !IsNil(o.BrandingTheme) {
		return true
	}

	return false
}

// SetBrandingTheme gets a reference to the given BrandingTheme and assigns it to the BrandingTheme field.
func (o *Contact) SetBrandingTheme(v BrandingTheme) {
	o.BrandingTheme = &v
}

// GetBatchPayments returns the BatchPayments field value if set, zero value otherwise.
func (o *Contact) GetBatchPayments() BatchPaymentDetails {
	if o == nil || IsNil(o.BatchPayments) {
		var ret BatchPaymentDetails
		return ret
	}
	return *o.BatchPayments
}

// GetBatchPaymentsOk returns a tuple with the BatchPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetBatchPaymentsOk() (*BatchPaymentDetails, bool) {
	if o == nil || IsNil(o.BatchPayments) {
		return nil, false
	}
	return o.BatchPayments, true
}

// HasBatchPayments returns a boolean if a field has been set.
func (o *Contact) HasBatchPayments() bool {
	if o != nil && !IsNil(o.BatchPayments) {
		return true
	}

	return false
}

// SetBatchPayments gets a reference to the given BatchPaymentDetails and assigns it to the BatchPayments field.
func (o *Contact) SetBatchPayments(v BatchPaymentDetails) {
	o.BatchPayments = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *Contact) GetDiscount() float64 {
	if o == nil || IsNil(o.Discount) {
		var ret float64
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetDiscountOk() (*float64, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *Contact) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float64 and assigns it to the Discount field.
func (o *Contact) SetDiscount(v float64) {
	o.Discount = &v
}

// GetBalances returns the Balances field value if set, zero value otherwise.
func (o *Contact) GetBalances() Balances {
	if o == nil || IsNil(o.Balances) {
		var ret Balances
		return ret
	}
	return *o.Balances
}

// GetBalancesOk returns a tuple with the Balances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetBalancesOk() (*Balances, bool) {
	if o == nil || IsNil(o.Balances) {
		return nil, false
	}
	return o.Balances, true
}

// HasBalances returns a boolean if a field has been set.
func (o *Contact) HasBalances() bool {
	if o != nil && !IsNil(o.Balances) {
		return true
	}

	return false
}

// SetBalances gets a reference to the given Balances and assigns it to the Balances field.
func (o *Contact) SetBalances(v Balances) {
	o.Balances = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *Contact) GetAttachments() []Attachment {
	if o == nil || IsNil(o.Attachments) {
		var ret []Attachment
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAttachmentsOk() ([]Attachment, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *Contact) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []Attachment and assigns it to the Attachments field.
func (o *Contact) SetAttachments(v []Attachment) {
	o.Attachments = v
}

// GetHasAttachmentsField returns the HasAttachmentsField field value if set, zero value otherwise.
func (o *Contact) GetHasAttachmentsField() bool {
	if o == nil || IsNil(o.HasAttachmentsField) {
		var ret bool
		return ret
	}
	return *o.HasAttachmentsField
}

// GetHasAttachmentsFieldOk returns a tuple with the HasAttachmentsField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetHasAttachmentsFieldOk() (*bool, bool) {
	if o == nil || IsNil(o.HasAttachmentsField) {
		return nil, false
	}
	return o.HasAttachmentsField, true
}

// HasHasAttachmentsField returns a boolean if a field has been set.
func (o *Contact) HasHasAttachmentsField() bool {
	if o != nil && !IsNil(o.HasAttachmentsField) {
		return true
	}

	return false
}

// SetHasAttachmentsField gets a reference to the given bool and assigns it to the HasAttachmentsField field.
func (o *Contact) SetHasAttachmentsField(v bool) {
	o.HasAttachmentsField = &v
}

// GetValidationErrors returns the ValidationErrors field value if set, zero value otherwise.
func (o *Contact) GetValidationErrors() []ValidationError {
	if o == nil || IsNil(o.ValidationErrors) {
		var ret []ValidationError
		return ret
	}
	return o.ValidationErrors
}

// GetValidationErrorsOk returns a tuple with the ValidationErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetValidationErrorsOk() ([]ValidationError, bool) {
	if o == nil || IsNil(o.ValidationErrors) {
		return nil, false
	}
	return o.ValidationErrors, true
}

// HasValidationErrors returns a boolean if a field has been set.
func (o *Contact) HasValidationErrors() bool {
	if o != nil && !IsNil(o.ValidationErrors) {
		return true
	}

	return false
}

// SetValidationErrors gets a reference to the given []ValidationError and assigns it to the ValidationErrors field.
func (o *Contact) SetValidationErrors(v []ValidationError) {
	o.ValidationErrors = v
}

// GetHasValidationErrorsField returns the HasValidationErrorsField field value if set, zero value otherwise.
func (o *Contact) GetHasValidationErrorsField() bool {
	if o == nil || IsNil(o.HasValidationErrorsField) {
		var ret bool
		return ret
	}
	return *o.HasValidationErrorsField
}

// GetHasValidationErrorsFieldOk returns a tuple with the HasValidationErrorsField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetHasValidationErrorsFieldOk() (*bool, bool) {
	if o == nil || IsNil(o.HasValidationErrorsField) {
		return nil, false
	}
	return o.HasValidationErrorsField, true
}

// HasHasValidationErrorsField returns a boolean if a field has been set.
func (o *Contact) HasHasValidationErrorsField() bool {
	if o != nil && !IsNil(o.HasValidationErrorsField) {
		return true
	}

	return false
}

// SetHasValidationErrorsField gets a reference to the given bool and assigns it to the HasValidationErrorsField field.
func (o *Contact) SetHasValidationErrorsField(v bool) {
	o.HasValidationErrorsField = &v
}

// GetStatusAttributeString returns the StatusAttributeString field value if set, zero value otherwise.
func (o *Contact) GetStatusAttributeString() string {
	if o == nil || IsNil(o.StatusAttributeString) {
		var ret string
		return ret
	}
	return *o.StatusAttributeString
}

// GetStatusAttributeStringOk returns a tuple with the StatusAttributeString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetStatusAttributeStringOk() (*string, bool) {
	if o == nil || IsNil(o.StatusAttributeString) {
		return nil, false
	}
	return o.StatusAttributeString, true
}

// HasStatusAttributeString returns a boolean if a field has been set.
func (o *Contact) HasStatusAttributeString() bool {
	if o != nil && !IsNil(o.StatusAttributeString) {
		return true
	}

	return false
}

// SetStatusAttributeString gets a reference to the given string and assigns it to the StatusAttributeString field.
func (o *Contact) SetStatusAttributeString(v string) {
	o.StatusAttributeString = &v
}

func (o Contact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Contact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContactID) {
		toSerialize["ContactID"] = o.ContactID
	}
	if !IsNil(o.MergedToContactID) {
		toSerialize["MergedToContactID"] = o.MergedToContactID
	}
	if !IsNil(o.ContactNumber) {
		toSerialize["ContactNumber"] = o.ContactNumber
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["AccountNumber"] = o.AccountNumber
	}
	if !IsNil(o.ContactStatus) {
		toSerialize["ContactStatus"] = o.ContactStatus
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.FirstName) {
		toSerialize["FirstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["LastName"] = o.LastName
	}
	if !IsNil(o.CompanyNumber) {
		toSerialize["CompanyNumber"] = o.CompanyNumber
	}
	if !IsNil(o.EmailAddress) {
		toSerialize["EmailAddress"] = o.EmailAddress
	}
	if !IsNil(o.ContactPersons) {
		toSerialize["ContactPersons"] = o.ContactPersons
	}
	if !IsNil(o.BankAccountDetails) {
		toSerialize["BankAccountDetails"] = o.BankAccountDetails
	}
	if !IsNil(o.TaxNumber) {
		toSerialize["TaxNumber"] = o.TaxNumber
	}
	if !IsNil(o.AccountsReceivableTaxType) {
		toSerialize["AccountsReceivableTaxType"] = o.AccountsReceivableTaxType
	}
	if !IsNil(o.AccountsPayableTaxType) {
		toSerialize["AccountsPayableTaxType"] = o.AccountsPayableTaxType
	}
	if !IsNil(o.Addresses) {
		toSerialize["Addresses"] = o.Addresses
	}
	if !IsNil(o.Phones) {
		toSerialize["Phones"] = o.Phones
	}
	if !IsNil(o.IsSupplier) {
		toSerialize["IsSupplier"] = o.IsSupplier
	}
	if !IsNil(o.IsCustomer) {
		toSerialize["IsCustomer"] = o.IsCustomer
	}
	if !IsNil(o.SalesDefaultLineAmountType) {
		toSerialize["SalesDefaultLineAmountType"] = o.SalesDefaultLineAmountType
	}
	if !IsNil(o.PurchasesDefaultLineAmountType) {
		toSerialize["PurchasesDefaultLineAmountType"] = o.PurchasesDefaultLineAmountType
	}
	if !IsNil(o.DefaultCurrency) {
		toSerialize["DefaultCurrency"] = o.DefaultCurrency
	}
	if !IsNil(o.XeroNetworkKey) {
		toSerialize["XeroNetworkKey"] = o.XeroNetworkKey
	}
	if !IsNil(o.SalesDefaultAccountCode) {
		toSerialize["SalesDefaultAccountCode"] = o.SalesDefaultAccountCode
	}
	if !IsNil(o.PurchasesDefaultAccountCode) {
		toSerialize["PurchasesDefaultAccountCode"] = o.PurchasesDefaultAccountCode
	}
	if !IsNil(o.SalesTrackingCategories) {
		toSerialize["SalesTrackingCategories"] = o.SalesTrackingCategories
	}
	if !IsNil(o.PurchasesTrackingCategories) {
		toSerialize["PurchasesTrackingCategories"] = o.PurchasesTrackingCategories
	}
	if !IsNil(o.TrackingCategoryName) {
		toSerialize["TrackingCategoryName"] = o.TrackingCategoryName
	}
	if !IsNil(o.TrackingCategoryOption) {
		toSerialize["TrackingCategoryOption"] = o.TrackingCategoryOption
	}
	if !IsNil(o.PaymentTerms) {
		toSerialize["PaymentTerms"] = o.PaymentTerms
	}
	if !IsNil(o.UpdatedDateUTC) {
		toSerialize["UpdatedDateUTC"] = o.UpdatedDateUTC
	}
	if !IsNil(o.ContactGroups) {
		toSerialize["ContactGroups"] = o.ContactGroups
	}
	if !IsNil(o.Website) {
		toSerialize["Website"] = o.Website
	}
	if !IsNil(o.BrandingTheme) {
		toSerialize["BrandingTheme"] = o.BrandingTheme
	}
	if !IsNil(o.BatchPayments) {
		toSerialize["BatchPayments"] = o.BatchPayments
	}
	if !IsNil(o.Discount) {
		toSerialize["Discount"] = o.Discount
	}
	if !IsNil(o.Balances) {
		toSerialize["Balances"] = o.Balances
	}
	if !IsNil(o.Attachments) {
		toSerialize["Attachments"] = o.Attachments
	}
	if !IsNil(o.HasAttachmentsField) {
		toSerialize["HasAttachments"] = o.HasAttachmentsField
	}
	if !IsNil(o.ValidationErrors) {
		toSerialize["ValidationErrors"] = o.ValidationErrors
	}
	if !IsNil(o.HasValidationErrorsField) {
		toSerialize["HasValidationErrors"] = o.HasValidationErrorsField
	}
	if !IsNil(o.StatusAttributeString) {
		toSerialize["StatusAttributeString"] = o.StatusAttributeString
	}
	return toSerialize, nil
}

type NullableContact struct {
	value *Contact
	isSet bool
}

func (v NullableContact) Get() *Contact {
	return v.value
}

func (v *NullableContact) Set(val *Contact) {
	v.value = val
	v.isSet = true
}

func (v NullableContact) IsSet() bool {
	return v.isSet
}

func (v *NullableContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContact(val *Contact) *NullableContact {
	return &NullableContact{value: val, isSet: true}
}

func (v NullableContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


