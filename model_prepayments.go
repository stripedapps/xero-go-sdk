/*
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40.0
Contact: api@xero.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Prepayments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Prepayments{}

// Prepayments struct for Prepayments
type Prepayments struct {
	Prepayments []Prepayment `json:"Prepayments,omitempty"`
}

// NewPrepayments instantiates a new Prepayments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrepayments() *Prepayments {
	this := Prepayments{}
	return &this
}

// NewPrepaymentsWithDefaults instantiates a new Prepayments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrepaymentsWithDefaults() *Prepayments {
	this := Prepayments{}
	return &this
}

// GetPrepayments returns the Prepayments field value if set, zero value otherwise.
func (o *Prepayments) GetPrepayments() []Prepayment {
	if o == nil || IsNil(o.Prepayments) {
		var ret []Prepayment
		return ret
	}
	return o.Prepayments
}

// GetPrepaymentsOk returns a tuple with the Prepayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Prepayments) GetPrepaymentsOk() ([]Prepayment, bool) {
	if o == nil || IsNil(o.Prepayments) {
		return nil, false
	}
	return o.Prepayments, true
}

// HasPrepayments returns a boolean if a field has been set.
func (o *Prepayments) HasPrepayments() bool {
	if o != nil && !IsNil(o.Prepayments) {
		return true
	}

	return false
}

// SetPrepayments gets a reference to the given []Prepayment and assigns it to the Prepayments field.
func (o *Prepayments) SetPrepayments(v []Prepayment) {
	o.Prepayments = v
}

func (o Prepayments) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Prepayments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Prepayments) {
		toSerialize["Prepayments"] = o.Prepayments
	}
	return toSerialize, nil
}

type NullablePrepayments struct {
	value *Prepayments
	isSet bool
}

func (v NullablePrepayments) Get() *Prepayments {
	return v.value
}

func (v *NullablePrepayments) Set(val *Prepayments) {
	v.value = val
	v.isSet = true
}

func (v NullablePrepayments) IsSet() bool {
	return v.isSet
}

func (v *NullablePrepayments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrepayments(val *Prepayments) *NullablePrepayments {
	return &NullablePrepayments{value: val, isSet: true}
}

func (v NullablePrepayments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrepayments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


