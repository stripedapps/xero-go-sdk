/*
Xero Accounting API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40.0
Contact: api@xero.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// QuoteLineAmountTypes Line amounts are exclusive of tax by default if you donâ€™t specify this element. See Line Amount Types
type QuoteLineAmountTypes string

// List of QuoteLineAmountTypes
const (
	EXCLUSIVE QuoteLineAmountTypes = "EXCLUSIVE"
	INCLUSIVE QuoteLineAmountTypes = "INCLUSIVE"
	NOTAX QuoteLineAmountTypes = "NOTAX"
)

// All allowed values of QuoteLineAmountTypes enum
var AllowedQuoteLineAmountTypesEnumValues = []QuoteLineAmountTypes{
	"EXCLUSIVE",
	"INCLUSIVE",
	"NOTAX",
}

func (v *QuoteLineAmountTypes) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := QuoteLineAmountTypes(value)
	for _, existing := range AllowedQuoteLineAmountTypesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid QuoteLineAmountTypes", value)
}

// NewQuoteLineAmountTypesFromValue returns a pointer to a valid QuoteLineAmountTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewQuoteLineAmountTypesFromValue(v string) (*QuoteLineAmountTypes, error) {
	ev := QuoteLineAmountTypes(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for QuoteLineAmountTypes: valid values are %v", v, AllowedQuoteLineAmountTypesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v QuoteLineAmountTypes) IsValid() bool {
	for _, existing := range AllowedQuoteLineAmountTypesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to QuoteLineAmountTypes value
func (v QuoteLineAmountTypes) Ptr() *QuoteLineAmountTypes {
	return &v
}

type NullableQuoteLineAmountTypes struct {
	value *QuoteLineAmountTypes
	isSet bool
}

func (v NullableQuoteLineAmountTypes) Get() *QuoteLineAmountTypes {
	return v.value
}

func (v *NullableQuoteLineAmountTypes) Set(val *QuoteLineAmountTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteLineAmountTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteLineAmountTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteLineAmountTypes(val *QuoteLineAmountTypes) *NullableQuoteLineAmountTypes {
	return &NullableQuoteLineAmountTypes{value: val, isSet: true}
}

func (v NullableQuoteLineAmountTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteLineAmountTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

